---
import { format } from "date-fns";
import { Icon } from "astro-icon";

import MarkdownPostLayout from "../../layouts/MarkdownPostLayout.astro";
import { getCollection, type CollectionEntry } from "astro:content";

import { slugToPath } from "../../libs/blog";
import siteMeta from "../../siteMeta";

interface Props {
  slug: string;
  entry: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries
    .filter((entry) => !entry.data.draft)
    .map((entry) => {
      const slug = slugToPath(entry.slug);
      return {
        params: { slug },
        props: { slug, entry },
      };
    });
}

const { slug, entry } = Astro.props;
const { Content } = await entry.render();
---

<MarkdownPostLayout title={`${entry.data.title} | ${siteMeta.siteName}`}>
  <div class="mb-12">
    <a class="no-underline" href={`/blog/${slug}`}>
      <h1 class="text-center">{entry.data.title}</h1>
    </a>
    <div class="flex justify-center items-center">
      <Icon name="mdi:calendar" size={21} />
      <p class="p-0 ml-1 indent-0">
        {format(entry.data.created_at, "yyyy/MM/dd")}
      </p>
    </div>
    <ul class="flex list-none justify-center pt-4">
      {
        entry.data.tags.map((tag) => (
          <>
            <li
              class="before:content-none
                     flex gap-1 mx-1 px-2 py-1
                     items-center
                     text-sm
                     border border-black rounded-full"
            >
              <Icon name="mdi:tag" size={16} />
              {tag}
            </li>
          </>
        ))
      }
    </ul>
  </div>
  <div class="markdown">
    <Content />
  </div>
</MarkdownPostLayout>
